{"version":3,"sources":["api/api.js","components/User/User.jsx","components/UsersList/UsersList.jsx","components/Post/Post.jsx","components/PostsList/PostsList.jsx","api/posts.js","App.jsx","api/users.js","index.js"],"names":["BASE_URL","User","user","id","createdAt","name","avatar","phone","city","role","className","src","alt","UsersList","users","map","to","Post","post","userId","editedAt","image","content","PostsList","withRouter","match","useState","posts","setPosts","selectedUserId","params","currentUser","filter","useEffect","fetch","then","response","ok","Error","status","json","allPosts","App","setUsers","allUsers","path","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAAaA,G,MAAW,4DCKXC,G,MAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEnBC,EACED,EADFC,GAAIC,EACFF,EADEE,UAAWC,EACbH,EADaG,KAAMC,EACnBJ,EADmBI,OAAQC,EAC3BL,EAD2BK,MAAOC,EAClCN,EADkCM,KAAMC,EACxCP,EADwCO,KAG5C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAcC,IAAKL,EAAQM,IAAKP,IAC/C,oBAAIK,UAAU,aAAd,SAA4BL,IAC5B,0CAAWF,KACX,iDAAkBC,KAClB,6CAAcG,KACd,4CAAaC,KACb,4CAAaC,UCVNI,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,qBAAKJ,UAAU,YAAf,SACGI,EAAMC,KAAI,SAACb,GAAD,OACT,cAAC,IAAD,CACEc,GAAE,WAAMd,EAAKC,IADf,SAIE,cAAC,EAAD,CAAMD,KAAMA,KAFPA,EAAKC,WCRLc,G,MAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEnBf,EACEe,EADFf,GAAIgB,EACFD,EADEC,OAAQf,EACVc,EADUd,UAAWgB,EACrBF,EADqBE,SAAUC,EAC/BH,EAD+BG,MAAOC,EACtCJ,EADsCI,QAG1C,OACE,sBAAKZ,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAcC,IAAKU,EAAOT,IAAG,UAAKO,EAAL,aAE5C,sBAAKT,UAAU,gBAAf,UACE,0CAAWP,KACX,+CAAgBgB,KAChB,kDAAmBf,KACnB,iDAAkBgB,KAClB,4BAAIE,YCTCC,G,MAAYC,aACvB,YAAuB,IAApBC,EAAmB,EAAnBA,MAAOX,EAAY,EAAZA,MAAY,EACMY,mBAAS,IADf,mBACbC,EADa,KACNC,EADM,KAEdC,EAAiBJ,EAAMK,OAAOX,OAC9BY,EAAcjB,EAAMkB,QAAO,SAAC9B,GAAD,OAAUA,EAAKC,KAAO0B,KAAgB,GAOvE,OALAI,qBAAU,WCdU,IAACd,KDeVU,ECfqBK,MAAM,GAAD,OAAIlC,EAAJ,YAAgBmB,EAAhB,WACtCgB,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,SAG9B,OAAOH,EAASI,WDUXL,MAAK,SAACM,GAAD,OAAcb,EAASa,QAC9B,CAACZ,IAGF,sBAAKnB,UAAU,QAAf,UACE,cAAC,EAAD,CAAMR,KAAM6B,IAEZ,qBAAKrB,UAAU,cAAf,SACGiB,EAAMZ,KAAI,SAACG,GAAD,OACT,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKf,gBEnB3BuC,EAAM,WAAO,IAAD,EACGhB,mBAAS,IADZ,mBAChBZ,EADgB,KACT6B,EADS,KAQvB,OALAV,qBAAU,WCTkBC,MAAMlC,GACjCmC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,SAG9B,OAAOH,EAASI,UDKbL,MAAK,SAACS,GAAD,OAAcD,EAASC,QAC9B,IAGD,qBAAKlC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,KAAK,WAAZ,SACG/B,EAAMgC,OAAS,GACd,cAAC,EAAD,CAAWhC,MAAOA,MAGtB,cAAC,IAAD,CAAO+B,KAAK,IAAZ,SACE,cAAC,EAAD,CAAW/B,MAAOA,YEnB5BiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.2d40e514.chunk.js","sourcesContent":["export const BASE_URL = 'https://5fca3e863c1c220016441fcc.mockapi.io/api/v1/users';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './User.scss';\n\nexport const User = ({ user }) => {\n  const {\n    id, createdAt, name, avatar, phone, city, role,\n  } = user;\n\n  return (\n    <div className=\"user\">\n      <img className=\"user__image\" src={avatar} alt={name} />\n      <h2 className=\"user__name\">{name}</h2>\n      <p>{`ID: ${id}`}</p>\n      <p>{`createdAt: ${createdAt}`}</p>\n      <p>{`phone: ${phone}`}</p>\n      <p>{`city: ${city}`}</p>\n      <p>{`role: ${role}`}</p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string,\n    createdAt: PropTypes.string,\n    name: PropTypes.string,\n    avatar: PropTypes.string,\n    phone: PropTypes.string,\n    city: PropTypes.string,\n    role: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { User } from '../User';\n\nimport './UsersList.scss';\n\nexport const UsersList = ({ users }) => (\n  <div className=\"user-list\">\n    {users.map((user) => (\n      <Link\n        to={`/${user.id}`}\n        key={user.id}\n      >\n        <User user={user} />\n      </Link>\n    ))}\n  </div>\n\n);\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Post.scss';\n\nexport const Post = ({ post }) => {\n  const {\n    id, userId, createdAt, editedAt, image, content,\n  } = post;\n\n  return (\n    <div className=\"post\">\n      <img className=\"post__image\" src={image} alt={`${userId} avatar`} />\n\n      <div className=\"post__content\">\n        <p>{`ID: ${id}`}</p>\n        <p>{`User ID: ${userId}`}</p>\n        <p>{`Created at: ${createdAt}`}</p>\n        <p>{`Edited at: ${editedAt}`}</p>\n        <p>{content}</p>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    userId: PropTypes.string,\n    createdAt: PropTypes.string,\n    editedAt: PropTypes.string,\n    image: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getPosts } from '../../api/posts';\nimport { Post } from '../Post';\nimport { User } from '../User';\n\nimport './PostsList.scss';\n\nexport const PostsList = withRouter(\n  ({ match, users }) => {\n    const [posts, setPosts] = useState([]);\n    const selectedUserId = match.params.userId;\n    const currentUser = users.filter((user) => user.id === selectedUserId)[0];\n\n    useEffect(() => {\n      getPosts(selectedUserId)\n        .then((allPosts) => setPosts(allPosts));\n    }, [selectedUserId]);\n\n    return (\n      <div className=\"posts\">\n        <User user={currentUser} />\n\n        <div className=\"posts__list\">\n          {posts.map((post) => (\n            <Post post={post} key={post.id} />\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n\nPostsList.propTypes = {\n  match: PropTypes.shape(),\n  users: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPosts = (userId) => fetch(`${BASE_URL}/${userId}/posts`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status}`);\n    }\n\n    return response.json();\n  });\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport { getUsers } from './api/users';\nimport { UsersList } from './components/UsersList';\nimport { PostsList } from './components/PostsList';\n\nexport const App = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    getUsers()\n      .then((allUsers) => setUsers(allUsers));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/:userId\">\n          {users.length > 0 && (\n            <PostsList users={users} />\n          )}\n        </Route>\n        <Route path=\"/\">\n          <UsersList users={users} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getUsers = () => fetch(BASE_URL)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status}`);\n    }\n\n    return response.json();\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}